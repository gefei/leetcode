import java.util.LinkedList;
import java.util.Queue;

public class JLeet0200 {
    private int numIsLands(char[][] grid) {
        int[][] dirs = {
                {1, 0},
                {-1, 0},
                {0, 1},
                {0, -1}
        };
        int[] pos = getPosition(grid);
        int c = 0;
        while (pos[0] != -1) {
            c += 1;
            Queue<int[]> queue = new LinkedList<>();
            queue.add(pos);
            grid[pos[0]][pos[1]] = 'c';
            while (!queue.isEmpty()) {
                int[] me = queue.remove();
                grid[me[0]][me[1]] = 'c';
                for (int[] d : dirs) {
                    int ny = me[0] + d[0];
                    int nx = me[1] + d[1];
                    if (ny >= 0 && ny < grid.length
                        && nx >= 0 && nx < grid[0].length
                        && grid[ny][nx] == '1'
                    ) {
                        int[] n = {ny, nx};
                        queue.add(n);
                        grid[ny][nx] = 'c';
                    }
                }
            }
            pos = getPosition(grid);
        }
        return c;
    }

    private int[] getPosition(char[][] grid) {
      for (int y = 0; y < grid.length; y++) {
          for (int x = 0; x < grid[0].length; x++) {
              if (grid[y][x] == '1') {
                  return new int[]{y, x};
              }
          }
      }
        return new int[]{-1, -1};
    }

    public static void main(String[] args) {
        JLeet0200 jLeet0200 = new JLeet0200();
        /*
        char[][] grid = {
            {'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'},
            {'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},
            {'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},
            {'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
            {'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
            {'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},
            {'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},
            {'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
            {'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
            {'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},
            {'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
            {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
        };
         */
        char[][] grid = {
              {'1','1','1','1','0'},
              {'1','1','0','1','0'},
              {'1','1','0','0','0'},
              {'0','0','0','0','0'}};
        System.out.println(jLeet0200.numIsLands(grid));
    }
}
